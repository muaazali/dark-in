{"version":3,"sources":["Components/Login/Login.tsx","Components/Signup/Signup.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Login","props","className","placeholder","type","Fab","style","backgroundColor","darkMode","color","onClick","toggleLogIn","Signup","App","useState","logInMenuOpen","setlogInMenuOpen","setdarkMode","duration","direction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAIe,SAASA,EAAMC,GAC1B,OACI,sBAAKC,UAAU,uGAAf,UAEI,oBAAIA,UAAU,+BAAd,oBACA,oBAAIA,UAAU,qBAAd,mCACA,qBAAKA,UAAU,UAAf,SACI,uBAAOA,UAAU,oEAAoEC,YAAY,oBAErG,qBAAKD,UAAU,UAAf,SACI,uBAAOA,UAAU,oEAAoEC,YAAY,WAAWC,KAAK,eAErH,qBAAKF,UAAU,UAAf,SACI,cAACG,EAAA,EAAD,CAAKC,MAAO,CAACC,gBAAiBN,EAAMO,SAAW,QAAU,QAASC,MAAOR,EAAMO,SAAW,QAAU,SAAUN,UAAU,wBAAxH,SACI,cAAC,IAAD,QAGR,sBAAKA,UAAU,qBAAf,uBACc,sBAAMQ,QAAS,kBAAMT,EAAMU,eAAeT,UAAU,iCAApD,wBADd,qBChBG,SAASU,EAAOX,GAC3B,OACI,sBAAKC,UAAU,wGAAf,UAEI,oBAAIA,UAAU,+BAAd,qBACA,oBAAIA,UAAU,qBAAd,oCACA,qBAAKA,UAAU,UAAf,SACI,uBAAOA,UAAU,oEAAoEC,YAAY,gBAErG,qBAAKD,UAAU,UAAf,SACI,uBAAOA,UAAU,oEAAoEC,YAAY,oBAErG,qBAAKD,UAAU,UAAf,SACI,uBAAOA,UAAU,oEAAoEC,YAAY,WAAWC,KAAK,eAErH,qBAAKF,UAAU,UAAf,SACI,cAACG,EAAA,EAAD,CAAKC,MAAO,CAACC,gBAAiBN,EAAMO,SAAW,QAAU,QAASC,MAAOR,EAAMO,SAAW,QAAU,SAAUN,UAAU,wBAAxH,SACI,cAAC,IAAD,QAGR,sBAAKA,UAAU,qBAAf,+BACsB,sBAAMQ,QAAS,kBAAMT,EAAMU,eAAeT,UAAU,iCAApD,wBADtB,oB,oBCYGW,MA9Bf,WAAgB,IAAD,EAC6BC,oBAAS,GADtC,mBACNC,EADM,KACSC,EADT,OAEmBF,oBAAS,GAF5B,mBAENN,EAFM,KAEIS,EAFJ,KAGb,OACE,qBAAKf,UAAS,kCAA6BM,EAAW,UAAY,IAAlE,SACE,sBAAKN,UAAU,qIAAf,UAEA,wBAAQQ,QAAS,kBAAMO,GAAaT,IAApC,SAAiDA,EAAW,cAAC,IAAD,IAAkB,cAAC,IAAD,MAC9E,qBAAKN,UAAU,qHAAf,SAEIa,EAEA,qBAAKb,UAAU,+DAAf,SACE,cAAC,IAAD,CAAMgB,SAAU,IAAKC,UAAU,QAAQjB,UAAU,gDAAjD,SACE,cAACF,EAAD,CAAOW,YAAa,kBAAMK,GAAiB,IAAQR,SAAUA,QAIjE,qBAAKN,UAAU,6DAAf,SACE,cAAC,IAAD,CAAMgB,SAAU,IAAKC,UAAU,OAAOjB,UAAU,gDAAhD,SACE,cAACU,EAAD,CAAQD,YAAa,kBAAMK,GAAiB,IAAOR,SAAUA,gBCb5DY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.84871e0c.chunk.js","sourcesContent":["import { Fab } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { AiOutlineArrowRight } from 'react-icons/all'\r\n\r\nexport default function Login(props: { toggleLogIn: () => void, darkMode: boolean }) {\r\n    return (\r\n        <div className=\"tw-border tw-p-10 tw-text-left tw-m-2 tw-h-full\r\n            tw-flex tw-flex-col tw-justify-center tw-shadow-lg\">\r\n            <h1 className=\"tw-text-4xl tw-font-semibold\">Log In</h1>\r\n            <h2 className=\"tw-text-lg tw-my-3\">Ready to get back in?</h2>\r\n            <div className=\"tw-my-1\">\r\n                <input className=\"tw-border-b tw-w-2/3 tw-p-2 dark:tw-bg-black tw-transition-colors\" placeholder=\"Email Address\"></input>\r\n            </div>\r\n            <div className=\"tw-my-1\">\r\n                <input className=\"tw-border-b tw-w-2/3 tw-p-2 dark:tw-bg-black tw-transition-colors\" placeholder=\"Password\" type=\"password\"></input>\r\n            </div>\r\n            <div className=\"tw-mt-3\">\r\n                <Fab style={{backgroundColor: props.darkMode ? 'white' : 'black', color: props.darkMode ? 'black' : 'white'}} className=\"focus:tw-outline-none\">\r\n                    <AiOutlineArrowRight></AiOutlineArrowRight>\r\n                </Fab>\r\n            </div>\r\n            <div className=\"tw-mt-2 tw-text-sm\">\r\n                New here? <span onClick={() => props.toggleLogIn()} className=\"tw-underline tw-cursor-pointer\">Click here</span> to sign up.\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Fab } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { AiOutlineArrowRight } from 'react-icons/all'\r\n\r\n\r\nexport default function Signup(props: { toggleLogIn: () => void, darkMode: boolean }) {\r\n    return (\r\n        <div className=\"tw-border tw-p-10 tw-text-right tw-m-1 tw-h-full\r\n            tw-flex tw-flex-col tw-justify-center tw-shadow-lg\">\r\n            <h1 className=\"tw-text-4xl tw-font-semibold\">Sign Up</h1>\r\n            <h2 className=\"tw-text-lg tw-my-3\">Let's get you started!</h2>\r\n            <div className=\"tw-my-1\">\r\n                <input className=\"tw-border-b tw-w-2/3 tw-p-2 dark:tw-bg-black tw-transition-colors\" placeholder=\"Full Name\"></input>\r\n            </div>\r\n            <div className=\"tw-my-1\">\r\n                <input className=\"tw-border-b tw-w-2/3 tw-p-2 dark:tw-bg-black tw-transition-colors\" placeholder=\"Email Address\"></input>\r\n            </div>\r\n            <div className=\"tw-my-1\">\r\n                <input className=\"tw-border-b tw-w-2/3 tw-p-2 dark:tw-bg-black tw-transition-colors\" placeholder=\"Password\" type=\"password\"></input>\r\n            </div>\r\n            <div className=\"tw-mt-3\">\r\n                <Fab style={{backgroundColor: props.darkMode ? 'white' : 'black', color: props.darkMode ? 'black' : 'white'}} className=\"focus:tw-outline-none\">\r\n                    <AiOutlineArrowRight></AiOutlineArrowRight>\r\n                </Fab>\r\n            </div>\r\n            <div className=\"tw-mt-2 tw-text-sm\">\r\n                Already a member? <span onClick={() => props.toggleLogIn()} className=\"tw-underline tw-cursor-pointer\">Click here</span> to log in.\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Login from './Components/Login/Login';\nimport Signup from './Components/Signup/Signup';\nimport { Fade } from 'react-awesome-reveal'\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nfunction App() {\n  const [logInMenuOpen, setlogInMenuOpen] = useState(true)\n  const [darkMode, setdarkMode] = useState(false)\n  return (\n    <div className={`App tw-w-full tw-h-full ${darkMode ? 'tw-dark' : ''}`}>\n      <div className=\"tw-w-full tw-h-full tw-flex tw-items-center tw-justify-center tw-flex-col\n      tw-transition-colors dark:tw-bg-black dark:tw-text-white\">\n      <button onClick={() => setdarkMode(!darkMode)}>{ darkMode ? <FaSun></FaSun> : <FaMoon></FaMoon>}</button>\n      <div className=\"tw-flex tw-h-2/3 tw-flex-col md:tw-flex-row tw-w-full tw-justify-between tw-items-center tw-p-5 tw-overflow-hidden\">\n        {\n          logInMenuOpen\n          ?\n          <div className=\"tw-w-full tw-h-full tw-flex tw-justify-start tw-items-center\">\n            <Fade duration={500} direction=\"right\" className=\"tw-w-full md:tw-w-1/2 lg:tw-w-1/3 md:tw-h-5/6\">\n              <Login toggleLogIn={() => setlogInMenuOpen(false)} darkMode={darkMode}></Login>\n            </Fade>\n          </div>\n          :\n          <div className=\"tw-w-full tw-h-full tw-flex tw-justify-end tw-items-center\">\n            <Fade duration={500} direction=\"left\" className=\"tw-w-full md:tw-w-1/2 lg:tw-w-1/3 md:tw-h-5/6\">\n              <Signup toggleLogIn={() => setlogInMenuOpen(true)} darkMode={darkMode}></Signup>\n            </Fade>\n          </div>\n        }\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'animate.css/animate.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}